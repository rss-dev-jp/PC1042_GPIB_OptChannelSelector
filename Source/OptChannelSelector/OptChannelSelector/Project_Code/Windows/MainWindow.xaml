<Window x:Class="RssDev.Project_Code.Windows.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:RssDev.Project_Code.Windows"
		xmlns:ab="clr-namespace:RssDev.Project_Code.AttachedBehaviors"
		mc:Ignorable="d"
		d:DataContext="{d:DesignInstance local:MainWindowViewModel}"
		Height="400" Width="440" 
		WindowStartupLocation="CenterScreen" WindowStyle="ToolWindow">
	<Grid Margin="5">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Grid.Resources>
			<Style TargetType="{x:Type Button}" x:Key="buttonBase" >
				<Setter Property="MinWidth" Value="60" />
				<Setter Property="Height" Value="25" />
				<Setter Property="HorizontalContentAlignment" Value="Center" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Margin" Value="2,0" />
				<EventSetter Event="Click" Handler="OnButtonClick" />
			</Style>
			<Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonBase}" />
			<Style TargetType="{x:Type TextBlock}" x:Key="textBlockBase" >
				<Setter Property="MinWidth" Value="90" />
				<Setter Property="TextAlignment" Value="Right" />
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Margin" Value="0,0,3,0" />
			</Style>
			<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource textBlockBase}" />
			<Style TargetType="{x:Type TextBox}" x:Key="textBoxBase" >
				<Setter Property="MinWidth" Value="180" />
				<Setter Property="Height" Value="25" />
				<Setter Property="TextAlignment" Value="Left" />
				<Setter Property="VerticalContentAlignment" Value="Center" />
				<Setter Property="Padding" Value="3,0,0,0" />
				<Setter Property="ab:TextBoxGotFocusSelectAll.IsSelectAll" Value="True" />
				<Setter Property="ab:TextBoxUpdateProperty.IsInputEnter" Value="True" />
			</Style>
			<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource textBoxBase}" />
		</Grid.Resources>

		<StackPanel Grid.Row="0" Orientation="Vertical" Margin="0,3,0,2" >
			<StackPanel Orientation="Horizontal" >
				<TextBlock Text="VISA Address" />
				<TextBox Text="{Binding VisaAddress}" >
					<TextBox.Style>
						<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource textBoxBase}" >
							<Setter Property="IsEnabled" Value="True" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsConnect}" Value="True" >
									<Setter Property="IsEnabled" Value="False" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBox.Style>
				</TextBox>
				<Button Content="接続" Tag="connect" Margin="5,0,2,0" >
					<Button.Style>
						<Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonBase}" >
							<Setter Property="IsEnabled" Value="True" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsConnect}" Value="True" >
									<Setter Property="IsEnabled" Value="False" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
				<Button Content="切断" Tag="disconnect" >
					<Button.Style>
						<Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonBase}" >
							<Setter Property="IsEnabled" Value="True" />
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsConnect}" Value="False" >
									<Setter Property="IsEnabled" Value="False" />
								</DataTrigger>
								<DataTrigger Binding="{Binding IsSending}" Value="True" >
									<Setter Property="IsEnabled" Value="False" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
			</StackPanel>
			<StackPanel Orientation="Horizontal" Margin="0,3,0,0" >
				<TextBlock Text="タイムアウト(ms)" />
				<TextBox Text="{Binding ReadTimeout}" MinWidth="60" />
			</StackPanel>
		</StackPanel>

		<GroupBox Grid.Row="1" Header="コマンド送信" Margin="0,3,0,2" >
			<GroupBox.Style>
				<Style TargetType="{x:Type GroupBox}" >
					<Setter Property="IsEnabled" Value="True" />
					<Style.Triggers>
						<DataTrigger Binding="{Binding IsConnect}" Value="False" >
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
						<DataTrigger Binding="{Binding IsSending}" Value="True" >
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</GroupBox.Style>
			<StackPanel Orientation="Vertical" >
				<StackPanel Orientation="Horizontal" >
					<TextBlock Text="CH" />
					<ComboBox ItemsSource="{Binding Channels}" SelectedItem="{Binding SelectedChannel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
							  Width="80" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" >
						<ComboBox.ItemTemplate>
							<DataTemplate >
								<TextBlock Text="{Binding }" >
									<TextBlock.Style>
										<Style TargetType="{x:Type TextBlock}" >
											<Setter Property="TextAlignment" Value="Right" />
											<Setter Property="VerticalAlignment" Value="Center" />
											<Setter Property="Padding" Value="3,0" />
										</Style>
									</TextBlock.Style>
								</TextBlock>
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<Button Content="CH切替" Tag="channel" Margin="5,0,2,0" />
					<Button Content="状態確認" Tag="status" />
					<Button Content="機種確認" Tag="model" />
				</StackPanel>
				<StackPanel Orientation="Horizontal" Margin="0,3,0,0" >
					<TextBlock Text="コマンド入力" />
					<TextBox Text="{Binding InputCommand}" MinWidth="209" KeyDown="OnTextBoxKeyDown" />
					<Button Content="送信" Tag="send" Margin="4,0,2,0" />
				</StackPanel>
			</StackPanel>
		</GroupBox>

		<StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0,3,0,2" >
			<GroupBox Grid.Row="2" >
				<GroupBox.Header>
					<TextBlock Text="{Binding LogRowCount, StringFormat=通信ログ ({0:N0}行)}" />
				</GroupBox.Header>
				<TextBox Text="{Binding LogText, Mode=OneWay}" TextChanged="OnTextChanged" >
					<TextBox.Style>
						<Style TargetType="{x:Type TextBox}" >
							<Setter Property="Width" Value="320" />
							<Setter Property="HorizontalAlignment" Value="Left" />
							<Setter Property="HorizontalContentAlignment" Value="Left" />
							<Setter Property="VerticalContentAlignment" Value="Top" />
							<Setter Property="Padding" Value="3,2" />
							<Setter Property="IsReadOnly" Value="True" />
							<Setter Property="Background" Value="Black" />
							<Setter Property="Foreground" Value="LimeGreen" />
							<Setter Property="VerticalScrollBarVisibility" Value="Visible" />
						</Style>
					</TextBox.Style>
				</TextBox>
			</GroupBox>
			<StackPanel Orientation="Vertical" Margin="10,0,0,5" VerticalAlignment="Bottom" >
				<CheckBox Content="ログ出力" 
						  IsChecked="{Binding IsOutputLog, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
					<CheckBox.Style>
						<Style TargetType="{x:Type CheckBox}" >
							<Setter Property="MinWidth" Value="60" />
							<Setter Property="Height" Value="25" />
							<Setter Property="VerticalAlignment" Value="Center" />
							<Setter Property="HorizontalContentAlignment" Value="Left" />
							<Setter Property="VerticalContentAlignment" Value="Center" />
						</Style>
					</CheckBox.Style>
				</CheckBox>
				<Button Content="ログクリア" Tag="log" Margin="0,15,0,30" />
				<Button Content="終了" Tag="exit" Margin="0,15,0,0" />
			</StackPanel>
		</StackPanel>
	</Grid>
</Window>
